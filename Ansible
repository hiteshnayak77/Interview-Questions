Ansible Interview Questions


1. What is  inventory file used for and default inventory host location?

  The Ansible inventory file defines the hosts and groups of hosts upon which commands, modules, and tasks in a playbook operate. The file can be in one of many formats depending on your Ansible environment and plugins. The default location for the inventory file is /etc/ansible/hosts. If necessary, you can also create project-specific inventory files in alternate locations.

2. What is ansible configuration file used for and its default path?
  
  If you want to modify some settings in ansible we will use ansible configuration file. The default path will be /etc/ansible/ansible.cfg
  
3. Do you write your inventory file?
 Yes

4. How many types of variables and precedence?

There are almost 16 variable precedence in ansible where extra vars have highist precedence

5. Write the command to find the python version on nodes?

6. What is the file structure of ansible roles?

  Ansible roles can be as complex or as simple as you need. Sometimes, it is helpful to start simple and iterate into a more complex role as you shore up the base functionality.

7. What happen when one node or instance is unreachable?
the playbook will not be run to that node.

8. What happen when one task  is failed in playbook?
In ansible it executes tasks from top to bottom when task is failed then other bottom tasks will not be executed.

we can use in task,
ignore_errors: true 
it will ignore any failure ans still execute other tasks.

9. I have 20 servers , I want to install one package in 5 servers and other package in next 5 servers..like that How to write in ansible script for that…Explain?

10. What is the architecture of ansible?

11. How do I supply variables while executing the playbook in ansible?


12. Explain about the tags in ansible?


13. How to execute failure playbook again?
ansible-playbook playbook.yml --start-at-task="install packages"

The above will start executing your playbook at a task named “install packages”.

Alternatively, take a look at this previous answer How to run only one task in ansible playbook?

Finally, when a play fails, it usually gives you something along the lines of:

PLAY RECAP ******************************************************************** 
           to retry, use: --limit @/home/user/site.retry
Use that --limit command and it should retry from the failed task.


27


Future readers:

The --limit @/home/user/site.retry would not help in such a scenario, the .retry only stores the failed host and nothing more, so will just execute all tasks against failed hosts.

If you are using the latest version (Ansible 2.x) the --start-at-task does not work for tasks defined inside roles.

You can achieve similar effect by just using the --step flag e.g: ansible-playbook playbook.yml --step. The step asks you on before executing each task and you could choose (N)o/(y)es/(c)ontinue.

With this approach you selectively execute tasks when needed and also continue from point where it failed, after fixes.



14. How is ansible diffrent than any other configuration management tool?


15. Ansible playbooks are written in what format?


16. What is a module in Ansible?

17. What is inventory used for in ansible?

A child group’s variables will have higher precedence (override) a parent group’s variables.

18. Name three places where ansible variables can be stored?

ansible-playbook release.yml --extra-vars "version=1.23.45 other_variable=foo"

You can decide where to set a variable based on the scope you want that value to have. Ansible has three main scopes:

Global: this is set by config, environment variables and the command line

Play: each play and contained structures, vars entries (vars; vars_files; vars_prompt), role defaults and vars.

Host: variables directly associated to a host, like inventory, include_vars, facts or registered task outputs

19. What connection anible establishes with  linux and windows node.

20. Diffrence between Remote and local execution in ansible.

21. What is the purpose and location of  ansible.cfg file.

22. Name any two settings from anible.cfg file.

23. Please write below a sample inventory file with host, group & group of groups syntax in it.


24. What is the diffrence between group_vars & host_vars directory?

25. What are adhocs commands used for & write below syntax of a ad hocs command?

26. Write below ad hoc command to gather fact varibales on all the hosts from the inventory file?

27. What format does ansible ad hoc command returns the output?

28. Name three types of modules in ansible?

29. Name any 10 modules in ansible that you have used.

30. How to list all the ansible core modules from command line.

31. How to display all the options/attributes for apt module from command line.

32. How can you check mandatory option for any module from command line?

33. What is setup module used for?

34. Write down sample global play declaration

35. Write down any two tasks from playbook with its proper format and names.

36. Whats is the diffrence between sudo and become module and its purpose.

37. Write down playbook syntax of starting ntp service on webserver and dbservers host group at once.

38. How to take user input from a playbook?

39. What is debug module used for in playbooks?

40. How to store output of any task into a varible from playbook?

41. What are handlers used for in ansible and how is it diffrent from tasks?

42. Conditional execution in ansible is used for what purpose and write down its syntax with small description?

43. What are templates used for and its format?

44. What are ansible roles and its purpose?

45. Command to generate ansible roles directory structure.

46. Name 5 directories from ansible roles.

Ansible interview Questions


47. What is {{ }} symbol used for in ansible.

48. Write down all the places where we can define variables according to its precedence.

49. Write down syntax of dictionary variable?

TRUE or FALSE


50. Setup module gets executed after executing any ad hoc command.
True
False

51. Anible playbooks are written in XML format.
True
False

52. ansible.cfg file is list of plays.
True
False



53. Fact variables is generated by ansible and we do not need to create fact varibales.
True
False

54. Anible is written in Python langueage.
True
False

55. Ansible works on Master and client relationship, where ansible control server package is installed on master and ansible client package is installed on all the clients.
True
False

56. Ansible loop module is with_items.
True
False

57. All the templates in ansible roles has to be defined in main.yml file inside templates directory.
True
False

58. All the roles uploaded in ansible galaxy website is written and owned by Ansible inc(organization).
True
False

59. Ansible can only get installed on Linux machine but can manage Linux and windows nodes.
True
False


60. Write a Ansible task that can copy the file to remote location with the ownership of Jboss?
- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: /srv/myfiles/foo.conf
    dest: /etc/foo.conf
    owner: foo
    group: foo
    mode: '0644'

- name: Copy file with owner and permission, using symbolic representation
  ansible.builtin.copy:
    src: /srv/myfiles/foo.conf
    dest: /etc/foo.conf
    owner: foo
    group: foo
    mode: u=rw,g=r,o=r

- name: Another symbolic mode example, adding some permissions and removing others
  ansible.builtin.copy:
    src: /srv/myfiles/foo.conf
    dest: /etc/foo.conf
    owner: foo
    group: foo
    mode: u+rw,g-wx,o-rwx

- name: Copy a new "ntp.conf" file into place, backing up the original if it differs from the copied version
  ansible.builtin.copy:
    src: /mine/ntp.conf
    dest: /etc/ntp.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes

- name: Copy a new "sudoers" file into place, after passing validation with visudo
  ansible.builtin.copy:
    src: /mine/sudoers
    dest: /etc/sudoers
    validate: /usr/sbin/visudo -csf %s

- name: Copy a "sudoers" file on the remote machine for editing
  ansible.builtin.copy:
    src: /etc/sudoers
    dest: /etc/sudoers.edit
    remote_src: yes
    validate: /usr/sbin/visudo -csf %s

- name: Copy using inline content
  ansible.builtin.copy:
    content: '# This file was moved to /etc/other.conf'
    dest: /etc/mine.conf

- name: If follow=yes, /path/to/file will be overwritten by contents of foo.conf
  ansible.builtin.copy:
    src: /etc/foo.conf
    dest: /path/to/link  # link to /path/to/file
    follow: yes

- name: If follow=no, /path/to/link will become a file and be overwritten by contents of foo.conf
  ansible.builtin.copy:
    src: /etc/foo.conf
    dest: /path/to/link  # link to /path/to/file
    follow: no
Return Values


61. What is local action in Ansible?


62. What are the roles in Ansible?


63. Write a playbook for installation of apache in ubuntu and centos?


64.How to create a role in ansible?


65. Different types of inventories in ansible?


66. if we want system information of machine how we will get the data with ansible like we use facter in puppet ?

67. In which language we write playbooks in ansible?

68. Activity that we use with ansibles or advantage Functionality or purpose of ansible using in your project?

69. How to launch an LDAP server using ansible?

70. How ansible works.. and what are the playbook written other than the basic playbooks ?

71. For example there are 4 aps server running and 4 websers running and we have a new code change and this change should automatically copy to these different servers using ansible, how I will come to know new code is generated.

Use Jenkins with POLL SCM option and after artifact is generated  using ansible to push suing copy module.

72. Have u done any automation like app goes down then for self healing of the app kind of the thing. 73 .Have  u written any playbook. Explain it
74. what is a dynamic inventory  in ansible?
75.  How can you manage cloud services with ansible?
76. How can you protect sensitive information in ansible?
77. How can you save the output of module execution in ansible?
78. How can you manage error handling?
In Ansible, you can manage error handling in a number of ways to ensure that your playbook runs smoothly and handles errors gracefully.

Here are some ways to manage error handling in Ansible:

Use the ignore_errors parameter: This parameter allows you to continue executing a playbook even if a task fails. You can use this parameter with a task to tell Ansible to ignore any errors that occur during execution of the task.

Use the failed_when parameter: This parameter allows you to define custom failure conditions for a task. You can use this parameter to specify the conditions under which a task should be considered a failure.

Use the block and rescue statements: These statements allow you to group a set of tasks together and define a rescue block to handle errors that occur during the execution of the tasks.

Use the notify and handlers statements: These statements allow you to define handlers that are triggered when certain events occur during the execution of a playbook. You can use these statements to handle errors that occur during the execution of a task.

Use the assert module: This module allows you to test a condition and fail a task if the condition is not met. You can use this module to ensure that certain conditions are met before executing a task.

Use the any_errors_fatal parameter: This parameter allows you to specify that a playbook should stop executing if any task fails. You can use this parameter to ensure that errors are caught early and that the playbook does not continue executing if errors occur.

By using these methods, you can manage error handling in Ansible and ensure that your playbook runs smoothly and handles errors gracefully.


79. what are conditionals in ansible?
80. write a playbook to create AMI on AWS?
81. How can you the fact varibales in ansible?
82. can we create an ansible module ?
83 .  How can you do provisioning with ansible?
84 . BASH Vs Python Vs Configuration Management Tools?
85.  How can you update a single table in a Database with ansible?
86. What type of roles you used in your playbook explain ?
87. How to create and use the Dynamic inventory ?
88. Write a playbook for installing AppDynamics and configure the agents for the same ?



---
- name: Sync Pull task - Executed on  the Destination host "{{groups['app'][1]}}"
  hosts: "{{groups['app'][0]}}"
  user: wlsusr
  tasks:   
    - name: Copy the file from mwiapp01 to mwiapp02 using Method Pull
      tags: sync-pull
      synchronize:
        src: "{{ item }}"
        dest: "{{ item }}"
        mode: pull
      delegate_to: "{{groups['app'][1]}}"
      register: syncfile
      run_once: true
      with_items:
       - "/tmp/app01-to-app02.jar"
       
       
       
       
       
       
       
 copy file from master to node
       
       ---
- name: Copy file from Ansible master to node server
  hosts: target_node
  tasks:
    - name: Copy file
      copy:
        src: /path/to/source/file
        dest: /path/to/destination/file

copy file from node to master
---
- name: Copy file from node server to Ansible master
  hosts: target_node
  become: true
  tasks:
    - name: Copy file
      fetch:
        src: /path/to/source/file
        dest: /path/to/destination/directory
        flat: yes




Ansible Tags

- name: Install Apache web server
  apt:
    name: apache2
    state: present
  tags:
    - apache
    - webserver

ansible-playbook playbook.yml --tags apache

ansible-playbook playbook.yml --skip-tags webserver


